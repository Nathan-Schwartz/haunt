
<div class="sixteen columns graveyard">
  <div class="one-third column white alpha">
    <h3>What it is?</h3>
    <p>Haunt is a tiny web service which helps keep your github issues under control. It does this by patroling your github repo and closing, sorting, and commenting on your issues as it sees fit.</p>
    <img class="ghost" src="/img/haunt.png" alt="haunty the ghost">
    <p>Ultimately, Haunt's aim is to reduce the number of steps between an open issue and a closed issue.</p>
    <p>Getting started with haunt is dead simple. Just add him as a collaborator to your project and he will start processing your issues right away.</p>
  </div>
</div>
<div class="sixteen columns">
  <hr class="thick">
  <h3>Documentation</h3>
  <p>Below you'll find the documentation for Haunt. If you have any additional questions, please contact <a href="mailto:hauntapp@gmail.com">hauntapp@gmail.com</a>.</p>
  <ul class="square">
    <li><a href="#getting-started">Getting Started</a></li>
    <li><a href="#hauntrc">hauntrc</a></li>
    <li><a href="#reporting">Reporting</a></li>
  </ul>
  <hr id="getting-started">
  <h5><a href="#getting-started">Getting Started</a></h5>
  <p>For the most basic integration simply add <a href="//github.com/haunt">Haunt</a> as a contributor to your github project and haunt will start managing issues right away. Haunt will poll for new issues every 15 minutes. Tired of Haunt? Just kick him off your project.</p>
  <p>Haunt comes with a handful of smart defaults. These include the following tests and behaviors:</p>
  <ul class="square">
  <li><strong>+1</strong> - Calculates the number of +1's in an issue. If the count is +5, Haunt will tag the issue as "popular".</li>
  <li><strong>Duplicates</strong> - Searches previous issues for simliar tickets. If a ticket is found, it will warn the issuer that the ticket may be a duplicate.</li>
  <li><strong>Fixed</strong> - Searches commit history for relevant commit messages. If a match is found, it will warn the issuer that the ticket may been resolved.</li>
  </ul>
  <hr id="hauntrc">
  <h5><a href="#hauntrc">hauntrc</a></h5>
  <p>You can optionally specify a hauntrc to get even more from your integration. To do this, you'll need to create a github wiki page which defines a haunt role. The wiki page should live at http://github.com/user/project/wiki/haunt. Use this guide to specify tests for bugs, enhancements, pull-requests, and general issues. This page should be marked up in valid yaml. Failure to provide parseable yaml may result in unexpected results.</p>
  <p>
    There are 4 main, optional test categories:
  </p>
  <ul class="square">
    <li><strong>General</strong> - test specification applied to all issues including pull requests.</li>
    <li><strong>Bugs</strong> - test specification applied to only tickets interpreted as bugs.</li>
    <li><strong>Enhancements</strong> - test specification applied to only tickets interpreted as enhancements or feature requests.</li>
    <li><strong>Pull-Requests</strong> - test specification applied to only pull requests.</li>
  </ul>
  <p>Each category accepts an array of test objects. A valid test object requires the following object properties:</p>
  <ul class="square">
    <li><strong>Name</strong> - The name of the test, used in haunt messaging.</li>
    <li><strong>Type</strong> - The type of test. If "error", on test failure an issue will be closed. If "warning", a warning comment will be added to an issue, but the issue will not be closed.</li>
    <li><strong>Test</strong> - The method/regexp to run against a particular issue. The following methods are available:
    <ul class="square">
      <li><strong>Body</strong> - Executes a regular expression against an issue body.</li>
      <li><strong>Title</strong> - Executes a regular expression against an issue title.</li>
      <li><strong>Author</strong> - Executes a regular expression against an issue author.</li>
      <li><strong>Path</strong> - Executes a regular expression against all paths included in a pull-request (<strong>note</strong>: only available on pull requests).</li>
      <li><strong>False</strong> - If provided, the specified test will not be run.
    </ul>
    </li>
    <li><strong>Message</strong> - The message to be appended to an issue when a particular test fails.</li>
    <li><strong>Labels</strong> - Labels to be applied to an issue when a particular test fails. Accepts a string or array.</li>
  </ul>
  <p>The following is an example of a valid hauntrc.</p>
  <p>
<pre><code><strong>general</strong>:
  - name: body
    type: error
    test: body(/\w/g)
    message: You must provide a body for your issue.
  - name: +1
    test: false

<strong>bugs</strong>:
  - name: link
    type: warning
    test: body(/jsfiddle|jsbin/g)
    message: Please provide a link to an issolated test case using either jsfiddle or jsbin.
  - name: steps
    type: warning
    test: body(/step/g)
    message: Please provide a list of steps neccessary reproduce the issue beginning with the word "step".

<strong>enhancements</strong>:
  - name: link
    type: warning
    test: body(/http/g)
    message: When requesting an enhancement, it is helpful to provide links illustrating your request.

<strong>pull-request</strong>:
  - name: tests
    type: error
    test: path(/test/)
    message: Pull-requests should either be fixing a test or providing an additional test.
  - name: isJS
    type: error
    test: path(/\.js$/)
    labels: js
  - name: isCSS
    type: error
    test: path(/\.css$/)
    labels: css</code></pre>
  </p>
  <hr id="reporting">
  <h5><a href="#reporting">Reporting</a></h5>
  <p><strong>Note</strong>: Reporting is still in developement and not yet available publicly.</p>
  <p>Reporting will be provided on any participating git repo. This reporting includes an analytics dashboard which tracks number of issues filed. Number of failed tests. Number of tests warned on. Etc.</p>
</div>